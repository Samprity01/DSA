Given an integer array arr[]. Find the contiguous sub-array(containing at least one number) that has the maximum sum and return its sum.

Examples:

Input: arr[] = [1, 2, 3, -2, 5]
Output: 9
Explanation: Max subarray sum is 9 of elements (1, 2, 3, -2, 5) which is a contiguous subarray.


class Solution {
  public:
    // Function to find the sum of contiguous subarray with maximum sum.
    long long maxSubarraySum(vector<int> &arr) {
        // code here...
        long long sum=arr[0];
        long long maxsum=arr[0];
        
        for(int i=1;i<arr.size();i++){
            if(sum<0)
              sum=arr[i];
            else
              sum=sum+arr[i];
            if(sum>maxsum){
                maxsum=sum;
            }
        }
        return maxsum;
    }
};
