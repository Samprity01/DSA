Trapping Rain Water
Difficulty: HardAccuracy: 33.14%Submissions: 426K+Points: 8
Given an array arr[] of N non-negative integers representing the height of blocks. If width of each block is 1, compute how much water can be trapped between the blocks during the rainy season. 
 

Example 1:

Input:
N = 6
arr[] = {3,0,0,2,0,4}
Output:
10
Explanation: 






class Solution{

    // Function to find the trapped water between the blocks.
    public:
    long long trappingWater(int arr[], int n){
        // code here
        long long int total = 0, left=0, right=n-1, maxLeft=0,maxRight=0;
        
        while(left<right){
            if(arr[left]<=arr[right]){
                if(arr[left]>=maxLeft) maxLeft = arr[left];
                else total += maxLeft - arr[left];
                
                left++;
            }
            else{
               if(arr[right]>=maxRight) maxRight = arr[right];
               else total += maxRight - arr[right];
               
               right--;
            }
        }
        
        return total;
    }
};
