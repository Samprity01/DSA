Closest Three Sum
Difficulty: MediumAccuracy: 17.65%Submissions: 79K+Points: 4
Given an array, arr of integers, and another number target, find three integers in the array such that their sum is closest to the target. Return the sum of the three integers.

Note: If there are multiple solutions, return the maximum one.

Examples :

Input: arr[] = [-7, 9, 8, 3, 1, 1], target = 2
Output: 2
Explanation: There is only one triplet present in the array where elements are -7,8,1 whose sum is 2.


class Solution {
  public:
    int threeSumClosest(vector<int> arr, int target) {
        // Your code goes here
        vector<int> ans;
        int mini=INT_MAX;
        sort(arr.begin(),arr.end());
        for(int i=0;i<arr.size();i++){
            int start=i+1;
            int end=arr.size()-1;
            
            while(start<end){
                int sum=arr[i]+arr[start]+arr[end];
                if(sum==target){
                    return target;
                }
                
                int diff=abs(target-sum);
                ans.push_back(sum);
                if(mini>diff){
                    mini=diff;
                }
                if(sum<target){
                    start++;
                }
                else{
                    end--;
                }
            }
        }
       int tempE = mini + target;
        for(int i=0; i<ans.size(); i++)
        {
            if(ans[i] == tempE)
            {
                return tempE;
            }
        }
        return (target-mini);
    }
};
