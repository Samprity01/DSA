Special Stack
Difficulty: EasyAccuracy: 59.15%Submissions: 85K+Points: 2
Design a data-structure SpecialStack that supports all the stack operations like push(), pop(), isEmpty(), isFull() and an additional operation getMin() which should return the minimum element from the SpecialStack. Your task is to complete all the functions, using a stack data structure.

Note: The output of the code will be the value returned by getMin() function.

Examples:

Input: stack: 18 19 29 15 16
Output: 15
Explanation: The minimum element of the stack is 15.





void push(stack<int>& s, int a){
    
	// Your code goes here
	s.push(a);
}

bool isFull(stack<int>& s,int n){
    
    if(s.size()==n)
      return true;
      
    else
      return false;
	// Your code goes here
}

bool isEmpty(stack<int>& s){
	// Your code goes here
	if(s.empty()==true)
	  return true;
	else
	   return false;
}

int pop(stack<int>& s){
    int res=s.top();
    return res;
	// Your code goes here
}

int getMin(stack<int>& s){
	// Your code goes here
int mini=s.top();
    while(!s.empty())
    {
mini=min(s.top(),mini);
s.pop();
    }
    return mini;
    
}
