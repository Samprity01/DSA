Reverse a Linked List in Groups
Difficulty: HardAccuracy: 57.08%Submissions: 205K+Points: 8
Given a linked list, the task is to reverse every k node (where k is an input to the function) in the linked list. If the number of nodes is not a multiple of k then left-out nodes, in the end, should be considered as a group and must be reversed (See Example 2 for clarification).

Examples:

Input: Linked List: 1->2->2->4->5->6->7->8, k = 4
Output: 4 -> 2 -> 2 -> 1 -> 8 -> 7 -> 6 -> 5 

Explanation: The first 4 elements 1,2,2,4 are reversed first and then the next 4 elements 5,6,7,8. Hence, the resultant linked list is 4->2->2->1->8->7->6->5.
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
class Solution {
  public:
    struct node *reverseIt(struct node *head, int k) {
        // Complete this method
         if(head == NULL) {
        return NULL;
    }
   
    //step1: reverse first k nodes
    node* nextNode = NULL;
    node* curr = head;
    node* prev = NULL;
    int count= 0;
   
    while( curr != NULL && count < k ) {
        nextNode = curr -> next;
        curr -> next = prev;
        prev = curr;
        curr = nextNode;
        count++;
    }
   
    //step2: Recursion dekhlega aage ka
    if(nextNode != NULL) {
        head -> next = reverseIt (nextNode,k);
    }
   
    //step3: return head of reversed list
    return prev;

   
}
    
};
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
